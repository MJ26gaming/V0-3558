[exclude_object]
# [auto_speed]

[include mainsail.cfg]
# [include ./CFGs/lighting.cfg]
[include ./CFGs/PauseMacro.cfg]
[include ./CFGs/chamber_heater.cfg]
[include ./CFGs/macros.cfg]
# [include ./CFGs/testspeed.cfg]

[include /home/jackc/printer_data/config/CFGs/aliases.cfg]
[include ./CFGs/temp_monitor.cfg]

[danger_options]
autosave_includes: true 
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_4A0027000F51323431333839-if00


[respond]
default_type: echo
default_prefix:

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 12000
max_z_velocity: 200
max_z_accel: 5000
square_corner_velocity: 6.0

[input_shaper]
shaper_freq_x: 69.8
shaper_type_x: mzv
damping_ratio_x: .061

shaper_freq_y: 55
shaper_type_y: mzv
damping_ratio_y: .05

[gcode_arcs]
resolution: 0.1 ; down from Klipper stock 0.1


#####################################################################
#      X/Y Stepper Settings
#####################################################################
[stepper_x]  #M0, stepper b
enable_pin: !M0_EN
step_pin: M0_STEP
dir_pin: M0_DIR
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_endstop: 132
position_max: 132
position_min: -13
homing_speed: 50                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 20
homing_positive_dir: true
min_home_dist: 2



[tmc5160 stepper_x] 
spi_bus: spi2
cs_pin: M0_CS
diag1_pin: ^!M0_STALL # used for sensorless homing
interpolate: True
home_current:.49
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
run_current: 0.75
sense_resistor: 0.05
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
driver_SGt: -64							# this is set to -64 which is the max

[stepper_y] #M1, stepper A
enable_pin: !M1_EN
step_pin: M1_STEP
dir_pin: M1_DIR
microsteps: 32
full_steps_per_rotation: 200 
rotation_distance: 40
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_endstop: 120
position_min: -2
position_max: 123
homing_speed: 50                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 20
homing_positive_dir: true
min_home_dist: 2



[tmc5160 stepper_y] 
spi_bus: spi2
cs_pin: M1_CS
diag1_pin: ^!M1_STALL # used for sensorless homing
home_current: .49
interpolate: True
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
run_current: 0.75           
sense_resistor: 0.050
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
driver_SGt: -64							# this is set to -64 which is the max

[autotune_tmc stepper_x]
motor: moons-ms14hs5p4150
# sg4_thrs: 110
tuning_goal: performance
[autotune_tmc stepper_y]
motor: moons-ms14hs5p4150
# sg4_thrs: 94
tuning_goal: performance

#####################################################################
#   Z Stepper Settings
#####################################################################
[stepper_z] #motor 4, front left
step_pin: M4_STEP
dir_pin: M4_DIR
enable_pin: !M4_EN
microsteps: 128
rotation_distance: 32
endstop_pin: probe:z_virtual_endstop
# position_endstop: 0.0
position_max: 105
position_min: -3

[tmc2209 stepper_z]
uart_pin: M4_UART
interpolate: true
## Formbot Moons 
# rated_motor_current * 0.707 * .65 = 0.65 * 0.707 * 0.65 = 0.30
run_current: 0.30
sense_resistor: 0.1
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[stepper_z1] #motor 5, rear 
step_pin: M5_STEP
dir_pin: M5_DIR
enable_pin: !M5_EN
rotation_distance: 32                                                
microsteps: 128



[tmc2209 stepper_z1]
uart_pin: M5_UART
interpolate: true
## Formbot Moons 
# rated_motor_current * 0.707 * .65 = 0.65 * 0.707 * 0.65 = 0.30
run_current: 0.30
sense_resistor: 0.1
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[stepper_z2] #motor 6,front right
step_pin: M6_STEP
dir_pin: M6_DIR
enable_pin: !M6_EN
rotation_distance: 32                                              
microsteps: 128



[tmc2209 stepper_z2]
uart_pin: M6_UART
interpolate: true
## Formbot Moons 
# rated_motor_current * 0.707 * .65 = 0.65 * 0.707 * 0.65 = 0.30
run_current: 0.30
sense_resistor: 0.1
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
[endstop_phase]

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: HB
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: T0
smooth_time: 3.0
min_temp: 0
max_temp: 120
#control: mpc
heater_power: 120
cooling_fan: fan_generic bed_fan
ambient_temp_sensor: heater_generic chamber
#block_heat_capacity: 167.561
#sensor_responsiveness: 0.0336697
#ambient_transfer: 0.371380
#fan_ambient_transfer: 0.37138, 0.335771, 0.456601, 0.462734, 0.526005, 0.518339, 0.469665





[fan_generic nevermore]
pin: F2

[delayed_gcode _FILTER_OFF]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0

[gcode_macro _FILTER_ON]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=1
    
[gcode_macro _TOGGLE_NEVERMORE]
gcode:
    {% if printer['fan_generic nevermore'].speed > 0 %}
      SET_FAN_SPEED FAN=nevermore SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=nevermore SPEED=1
    {% endif %}

#####################################################################
#   Filament Runout Sensor
#####################################################################

# [filament_switch_sensor Filament_Runout_Sensor]
# pause_on_runout: false
# runout_gcode:
# switch_pin: gpio16


#####################################################################
#   Input Shaping
#####################################################################
# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#       60, 60, 20  # an example


[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#####################################################################
#   Additional MCUS
#####################################################################
[include ./CFGs/Zeroclick.cfg]
[include ./CFGs/toolboard.cfg]

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
  M84
  STOP_LED_EFFECTS
  _cpufreq_set GOVERNOR=ondemand
timeout: 300

[z_tilt]
z_positions:
## For Manta-Ray Bed
 # -43.5, 13
 # 60, 126
 # 163.5, 13

# For Hammer-Head Bed
  -47.5,9.5
  60, 130.5
  167.5,9.5

points:
 30,-2
 80,98
 130,-2

speed: 80
retries: 3
retry_tolerance: 0.02
horizontal_move_z: 30
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
min_horizontal_move_z: 3
#   minimum value for horizontal move z
#   (only used when adaptive_horizontal_move_z is True)
adaptive_horizontal_move_z: True
#   if we should adjust horizontal move z after the first adjustment round,
#   based on error.
#   when set to True, initial horizontal_move_z is the config value,
#   subsequent iterations will set horizontal_move_z to
#   the ceil of error, or min_horizontal_move_z - whichever is greater.

[safe_z_home]
home_xy_position: 80,48

speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 10

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [dockable_probe]
#*# z_offset = 10.088
#*#
#*# [heater_bed]
#*# control = mpc
#*# block_heat_capacity = 120.216
#*# sensor_responsiveness = 0.0360364
#*# ambient_transfer = 0.384820
#*# fan_ambient_transfer = 0.38482, 0.690747, 0.809518, 0.879306, 0.94501
#*#
#*# [extruder]
#*# pid_version = 1
#*# pid_target = 260.00
#*# pid_tolerance = 0.0200
#*# control = pid
#*# pid_kp = 22.635
#*# pid_ki = 0.998
#*# pid_kd = 128.316
#*#
#*# [telemetry]
#*# enabled = False
